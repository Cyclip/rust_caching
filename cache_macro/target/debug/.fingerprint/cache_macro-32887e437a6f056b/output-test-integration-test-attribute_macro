{"message":"unused import: `std::mem::size_of_val`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"tests\\rust_caching.rs","byte_start":129,"byte_end":150,"line_start":3,"line_end":3,"column_start":5,"column_end":26,"is_primary":true,"text":[{"text":"use std::mem::size_of_val; // get current cache size","highlight_start":5,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"tests\\rust_caching.rs","byte_start":125,"byte_end":151,"line_start":3,"line_end":3,"column_start":1,"column_end":27,"is_primary":true,"text":[{"text":"use std::mem::size_of_val; // get current cache size","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `std::mem::size_of_val`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mtests\\rust_caching.rs:3:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0muse std::mem::size_of_val; // get current cache size\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"unused import: `Hash`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"tests\\rust_caching.rs","byte_start":263,"byte_end":267,"line_start":5,"line_end":5,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"use std::hash::{Hash, Hasher}; // convert args to id","highlight_start":17,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"tests\\rust_caching.rs","byte_start":263,"byte_end":269,"line_start":5,"line_end":5,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"use std::hash::{Hash, Hasher}; // convert args to id","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `Hash`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mtests\\rust_caching.rs:5:17\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0muse std::hash::{Hash, Hasher}; // convert args to id\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^\u001b[0m\n\n"}
{"message":"unused variable: `cache`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"tests\\attribute_macro.rs","byte_start":244,"byte_end":249,"line_start":13,"line_end":13,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"    let cache = rust_caching::MemCache::new(50000000u64);","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"tests\\attribute_macro.rs","byte_start":244,"byte_end":249,"line_start":13,"line_end":13,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"    let cache = rust_caching::MemCache::new(50000000u64);","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":"_cache","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `cache`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mtests\\attribute_macro.rs:13:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let cache = rust_caching::MemCache::new(50000000u64);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_cache`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"message":"unused variable: `v`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"tests\\rust_caching.rs","byte_start":897,"byte_end":898,"line_start":31,"line_end":31,"column_start":17,"column_end":18,"is_primary":true,"text":[{"text":"        let mut v: Vec<u64> = Vec::new();","highlight_start":17,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"tests\\rust_caching.rs","byte_start":1021,"byte_end":1032,"line_start":41,"line_end":41,"column_start":5,"column_end":16,"is_primary":false,"text":[{"text":"    args_id!();","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"args_id!","def_site_span":{"file_name":"tests\\rust_caching.rs","byte_start":789,"byte_end":1003,"line_start":28,"line_end":38,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! args_id { ","highlight_start":1,"highlight_end":24},{"text":"    ($($x:expr), *) => {{","highlight_start":1,"highlight_end":26},{"text":"        let mut s = DefaultHasher::new();","highlight_start":1,"highlight_end":42},{"text":"        let mut v: Vec<u64> = Vec::new();","highlight_start":1,"highlight_end":42},{"text":"        $(","highlight_start":1,"highlight_end":11},{"text":"            $x.hash(&mut s);","highlight_start":1,"highlight_end":29},{"text":"        )*","highlight_start":1,"highlight_end":11},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        s.finish()","highlight_start":1,"highlight_end":19},{"text":"    };}","highlight_start":1,"highlight_end":8},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"tests\\rust_caching.rs","byte_start":897,"byte_end":898,"line_start":31,"line_end":31,"column_start":17,"column_end":18,"is_primary":true,"text":[{"text":"        let mut v: Vec<u64> = Vec::new();","highlight_start":17,"highlight_end":18}],"label":null,"suggested_replacement":"_v","suggestion_applicability":"MachineApplicable","expansion":{"span":{"file_name":"tests\\rust_caching.rs","byte_start":1021,"byte_end":1032,"line_start":41,"line_end":41,"column_start":5,"column_end":16,"is_primary":false,"text":[{"text":"    args_id!();","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"args_id!","def_site_span":{"file_name":"tests\\rust_caching.rs","byte_start":789,"byte_end":1003,"line_start":28,"line_end":38,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! args_id { ","highlight_start":1,"highlight_end":24},{"text":"    ($($x:expr), *) => {{","highlight_start":1,"highlight_end":26},{"text":"        let mut s = DefaultHasher::new();","highlight_start":1,"highlight_end":42},{"text":"        let mut v: Vec<u64> = Vec::new();","highlight_start":1,"highlight_end":42},{"text":"        $(","highlight_start":1,"highlight_end":11},{"text":"            $x.hash(&mut s);","highlight_start":1,"highlight_end":29},{"text":"        )*","highlight_start":1,"highlight_end":11},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        s.finish()","highlight_start":1,"highlight_end":19},{"text":"    };}","highlight_start":1,"highlight_end":8},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `v`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mtests\\rust_caching.rs:31:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        let mut v: Vec<u64> = Vec::new();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_v`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m41\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    args_id!();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"tests\\rust_caching.rs","byte_start":851,"byte_end":856,"line_start":30,"line_end":30,"column_start":13,"column_end":18,"is_primary":true,"text":[{"text":"        let mut s = DefaultHasher::new();","highlight_start":13,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"tests\\rust_caching.rs","byte_start":1021,"byte_end":1032,"line_start":41,"line_end":41,"column_start":5,"column_end":16,"is_primary":false,"text":[{"text":"    args_id!();","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"args_id!","def_site_span":{"file_name":"tests\\rust_caching.rs","byte_start":789,"byte_end":1003,"line_start":28,"line_end":38,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! args_id { ","highlight_start":1,"highlight_end":24},{"text":"    ($($x:expr), *) => {{","highlight_start":1,"highlight_end":26},{"text":"        let mut s = DefaultHasher::new();","highlight_start":1,"highlight_end":42},{"text":"        let mut v: Vec<u64> = Vec::new();","highlight_start":1,"highlight_end":42},{"text":"        $(","highlight_start":1,"highlight_end":11},{"text":"            $x.hash(&mut s);","highlight_start":1,"highlight_end":29},{"text":"        )*","highlight_start":1,"highlight_end":11},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        s.finish()","highlight_start":1,"highlight_end":19},{"text":"    };}","highlight_start":1,"highlight_end":8},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"`#[warn(unused_mut)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"tests\\rust_caching.rs","byte_start":851,"byte_end":855,"line_start":30,"line_end":30,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"        let mut s = DefaultHasher::new();","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":{"span":{"file_name":"tests\\rust_caching.rs","byte_start":1021,"byte_end":1032,"line_start":41,"line_end":41,"column_start":5,"column_end":16,"is_primary":false,"text":[{"text":"    args_id!();","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"args_id!","def_site_span":{"file_name":"tests\\rust_caching.rs","byte_start":789,"byte_end":1003,"line_start":28,"line_end":38,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! args_id { ","highlight_start":1,"highlight_end":24},{"text":"    ($($x:expr), *) => {{","highlight_start":1,"highlight_end":26},{"text":"        let mut s = DefaultHasher::new();","highlight_start":1,"highlight_end":42},{"text":"        let mut v: Vec<u64> = Vec::new();","highlight_start":1,"highlight_end":42},{"text":"        $(","highlight_start":1,"highlight_end":11},{"text":"            $x.hash(&mut s);","highlight_start":1,"highlight_end":29},{"text":"        )*","highlight_start":1,"highlight_end":11},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        s.finish()","highlight_start":1,"highlight_end":19},{"text":"    };}","highlight_start":1,"highlight_end":8},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable does not need to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mtests\\rust_caching.rs:30:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        let mut s = DefaultHasher::new();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: remove this `mut`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m41\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    args_id!();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_mut)]` on by default\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"tests\\rust_caching.rs","byte_start":893,"byte_end":898,"line_start":31,"line_end":31,"column_start":13,"column_end":18,"is_primary":true,"text":[{"text":"        let mut v: Vec<u64> = Vec::new();","highlight_start":13,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"tests\\rust_caching.rs","byte_start":1021,"byte_end":1032,"line_start":41,"line_end":41,"column_start":5,"column_end":16,"is_primary":false,"text":[{"text":"    args_id!();","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"args_id!","def_site_span":{"file_name":"tests\\rust_caching.rs","byte_start":789,"byte_end":1003,"line_start":28,"line_end":38,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! args_id { ","highlight_start":1,"highlight_end":24},{"text":"    ($($x:expr), *) => {{","highlight_start":1,"highlight_end":26},{"text":"        let mut s = DefaultHasher::new();","highlight_start":1,"highlight_end":42},{"text":"        let mut v: Vec<u64> = Vec::new();","highlight_start":1,"highlight_end":42},{"text":"        $(","highlight_start":1,"highlight_end":11},{"text":"            $x.hash(&mut s);","highlight_start":1,"highlight_end":29},{"text":"        )*","highlight_start":1,"highlight_end":11},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        s.finish()","highlight_start":1,"highlight_end":19},{"text":"    };}","highlight_start":1,"highlight_end":8},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"tests\\rust_caching.rs","byte_start":893,"byte_end":897,"line_start":31,"line_end":31,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"        let mut v: Vec<u64> = Vec::new();","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":{"span":{"file_name":"tests\\rust_caching.rs","byte_start":1021,"byte_end":1032,"line_start":41,"line_end":41,"column_start":5,"column_end":16,"is_primary":false,"text":[{"text":"    args_id!();","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"args_id!","def_site_span":{"file_name":"tests\\rust_caching.rs","byte_start":789,"byte_end":1003,"line_start":28,"line_end":38,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! args_id { ","highlight_start":1,"highlight_end":24},{"text":"    ($($x:expr), *) => {{","highlight_start":1,"highlight_end":26},{"text":"        let mut s = DefaultHasher::new();","highlight_start":1,"highlight_end":42},{"text":"        let mut v: Vec<u64> = Vec::new();","highlight_start":1,"highlight_end":42},{"text":"        $(","highlight_start":1,"highlight_end":11},{"text":"            $x.hash(&mut s);","highlight_start":1,"highlight_end":29},{"text":"        )*","highlight_start":1,"highlight_end":11},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        s.finish()","highlight_start":1,"highlight_end":19},{"text":"    };}","highlight_start":1,"highlight_end":8},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable does not need to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mtests\\rust_caching.rs:31:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        let mut v: Vec<u64> = Vec::new();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: remove this `mut`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m41\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    args_id!();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"field is never read: `hits`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"tests\\rust_caching.rs","byte_start":451,"byte_end":460,"line_start":11,"line_end":11,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"    hits: u32,","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(dead_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: field is never read: `hits`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mtests\\rust_caching.rs:11:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    hits: u32,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(dead_code)]` on by default\u001b[0m\n\n"}
{"message":"field is never read: `misses`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"tests\\rust_caching.rs","byte_start":466,"byte_end":477,"line_start":12,"line_end":12,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"    misses: u32,","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: field is never read: `misses`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mtests\\rust_caching.rs:12:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    misses: u32,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"field is never read: `cache`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"tests\\rust_caching.rs","byte_start":483,"byte_end":530,"line_start":13,"line_end":13,"column_start":5,"column_end":52,"is_primary":true,"text":[{"text":"    cache: HashMap<u64, Box<dyn Display + 'static>>,","highlight_start":5,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: field is never read: `cache`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mtests\\rust_caching.rs:13:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    cache: HashMap<u64, Box<dyn Display + 'static>>,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `main`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"tests\\rust_caching.rs","byte_start":1008,"byte_end":1012,"line_start":40,"line_end":40,"column_start":4,"column_end":8,"is_primary":true,"text":[{"text":"fn main() {","highlight_start":4,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: function is never used: `main`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mtests\\rust_caching.rs:40:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mfn main() {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^\u001b[0m\n\n"}
{"message":"function is never used: `test`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"tests\\attribute_macro.rs","byte_start":99,"byte_end":103,"line_start":5,"line_end":5,"column_start":4,"column_end":8,"is_primary":true,"text":[{"text":"fn test() {","highlight_start":4,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: function is never used: `test`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mtests\\attribute_macro.rs:5:4\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mfn test() {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^\u001b[0m\n\n"}
{"message":"11 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: 11 warnings emitted\u001b[0m\n\n"}
